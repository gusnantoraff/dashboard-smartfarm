// pages/reset-password.tsx

import { useState } from 'react';
import { useRouter } from 'next/router';
import AuthLayout from '@/layouts/Auth.layout';
import { Button, Text } from '@chakra-ui/react';
import FormItem from '@/components/FormItem';
import Link from '@/components/Link';
import { Formik, Form } from 'formik';
import Head from 'next/head';

const ResetPassword: React.FC = () => {
  const router = useRouter();
  const [error, setError] = useState<string>('');

  const handleSubmit = async ({ password, confirmPassword }: { password: string; confirmPassword: string }) => {
    setError('');

    if (password.length < 8) {
      setError('Password must be at least 8 characters long');
      return;
    }

    if (password !== confirmPassword) {
      setError('Passwords do not match');
      return;
    }

    try {
      const token = router.query.token;
      const response = await fetch(`http://localhost:4000/reset-password/${token}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ newPassword: password }),
      });

      if (response.ok) {
        router.push('/');
      } else {
        const data = await response.json();
        setError(data.message || 'Something went wrong');
      }
    } catch (error) {
      console.error('An unexpected error occurred:', error);
      setError('An unexpected error occurred');
    }
  };

  return (
    <>
      <Head>
        <title>Reset Password - OS SMARTFARM</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <AuthLayout
        title='Reset Password'
        subtitle='Enter your new password'
      >
        <Formik
          initialValues={{ password: '', confirmPassword: '' }}
          onSubmit={handleSubmit}
        >
          <Form>
            <div className='flex flex-col gap-y-6'>
              <FormItem.Password name='password' />
              <FormItem.Password name='confirmPassword' placeholder='Confirm Password' />
            </div>

            <Button
              w={'100%'}
              mt={'2.5rem'}
              type='submit'
              size='lg'
            >
              RESET PASSWORD
            </Button>

            {error && (
              <Text
                textAlign={'center'}
                letterSpacing={'-0.39 px'}
                lineHeight={'19.07px'}
                fontSize={'14px'}
                color='status.error'
                fontWeight={400}
                mt={2}
              >
                {error}
              </Text>
            )}

            <div className='flex justify-center items-center mt-6'>
              <Link href='/'>Back to Sign In</Link>
            </div>
          </Form>
        </Formik>
      </AuthLayout>
    </>
  );
};

export default ResetPassword;
